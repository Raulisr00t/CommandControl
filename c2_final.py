from cryptography.fernet import Fernet
import base64

key = base64.urlsafe_b64encode(b'Testisstudent1234567890987654321')
text = ''

def decrypt_msg(text,key):
    fernet = Fernet(key)
    decrypted_message = fernet.decrypt(text)
    return decrypted_message.decode()
